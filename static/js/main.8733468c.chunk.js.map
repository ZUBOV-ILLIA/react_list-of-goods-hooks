{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsFromServer","useState","goods","setGoods","Array","from","Set","map","good","length","sort","a","b","reverse","numbersToFilter","selectedFilter","setFilter","filteredGoods","filter","className","type","onClick","name","id","onChange","event","currentTarget","value","num","App","isActive","setStartBtn","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA6B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC3C,EAA0BC,mBAAS,YAAID,IAAvC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EACIF,mBAASG,MAAMC,KAAK,IAAIC,IAAI,YAAIN,GAC/BO,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YACjBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACnBC,WAJEC,EAAP,oBAMA,EAAoCb,mBAASa,EAAgB,IAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAAgBf,EAAMgB,QAAO,SAAAV,GAAI,OAAIA,EAAKC,QAAUM,KAE1D,OACE,qCACE,oBAAII,UAAU,aAAd,wBAIA,sBAAKA,UAAU,0BAAf,UAIE,wBACEC,KAAK,SACLD,UAAU,oBAGVE,QAAS,kBAAMlB,EAAS,YAAID,GAAOQ,SALrC,2BAUA,wBACEU,KAAK,SACLD,UAAU,qBAGVE,QAAS,kBAAMlB,EAAS,YAAID,GAAOW,YALrC,qBAUA,wBACEO,KAAK,SACLD,UAAU,kBAGVE,QAAS,kBAAMlB,EAAS,YAAID,GACzBQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,YANjC,4BAWA,wBACEW,KAAK,SACLD,UAAU,qBAGVE,QAAS,kBAAMlB,EAAS,YAAIH,KAL9B,mBAUA,qBAAKmB,UAAU,qBAAf,SAIE,wBACEG,KAAK,gBACLC,GAAG,eACHC,SAAU,SAAAC,GACRT,GAAWS,EAAMC,cAAcC,QAJnC,SAOGb,EAAgBP,KAAI,SAAAqB,GAAG,OACtB,wBACED,MAAOC,EADT,SAIGA,GAFIA,aASf,6BACGX,EAAcV,KAAI,SAAAC,GAAI,OACrB,6BACGA,GADMA,YCzFbR,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwCa6B,EArCO,WACpB,MAAgC5B,oBAAS,GAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEA,OACE,qBACEZ,UAAU,4CADZ,SAMIW,EAWE,qCACE,wBACEV,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMU,GAAY,IAH7B,iBAQA,cAAC,EAAD,CAAW/B,gBAAiBA,OAlB9B,wBACEoB,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMU,GAAY,IAH7B,sBC1BVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8733468c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  goodsFromServer: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsFromServer }) => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [numbersToFilter]\n    = useState(Array.from(new Set([...goodsFromServer]\n      .map(good => good.length)))\n      .sort((a, b) => a - b)\n      .reverse());\n\n  const [selectedFilter, setFilter] = useState(numbersToFilter[0]);\n  const filteredGoods = goods.filter(good => good.length <= selectedFilter);\n\n  return (\n    <>\n      <h1 className=\"title pt-4\">\n        Goods List\n      </h1>\n\n      <div className=\"\n        buttons-container\n        mb-5\"\n      >\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-danger\"\n          onClick={() => setGoods([...goods].sort())}\n        >\n          sort alphabet\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-warning\"\n          onClick={() => setGoods([...goods].reverse())}\n        >\n          reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\"\n          onClick={() => setGoods([...goods]\n            .sort((a, b) => a.length - b.length))}\n        >\n          sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-primary\"\n          onClick={() => setGoods([...goodsFromServer])}\n        >\n          reset\n        </button>\n\n        <div className=\"\n            select\n            is-primary\"\n        >\n          <select\n            name=\"length-filter\"\n            id=\"lengthFilter\"\n            onChange={event => {\n              setFilter(+event.currentTarget.value);\n            }}\n          >\n            {numbersToFilter.map(num => (\n              <option\n                value={num}\n                key={num}\n              >\n                {num}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <ul>\n        {filteredGoods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isActive, setStartBtn] = useState(false);\n\n  return (\n    <div\n      className=\"\n      App\n        has-text-warning\n        has-background-dark\"\n    >\n      {!isActive\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={() => setStartBtn(true)}\n          >\n            start\n          </button>\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              className=\"button is-warning\"\n              onClick={() => setStartBtn(false)}\n            >\n              end\n            </button>\n\n            <GoodsList goodsFromServer={goodsFromServer} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}